@startuml
DataEntry <|-- Feed
Subscription <|-- Feed
Feed o--  Database : weak reference >
Feed *--  Tag
Feed *--  Item
Feed --  Icon

interface DataSource<T> {
    --
    +abstract T get_data(string uri);
}

abstract class DataEntry {
}

abstract class FeedBuilder {
}

interface Subscription<T> {
    +string uri
    +UUID id
    --
    +abstract bool should_update();
    +abstract void update(DataSource source);
}

public class Feed {
    Feed(Database)
    Feed(Record)
    --
    +string title
    +string? description
    +string link
    +string? rights
    +Collection<Tag> tags
    +string? generator
    +Icon? icon
    +DateTime? last_updated
    -Collection<Item> items

    +string get_title()
    +void set_title(string)
    +string? get_description()
    +void set_description(string)
    +string get_link()
    +void set_link(string)
    +string? get_rights()
    +void set_rights(string)
    +Collection<Tag> get_tags()
    +void set_tags(Collection<Tag>)
    +string? get_generator()
    +void set_generator(string)
    +Icon? get_icon()
    +set_icon(Icon)
    +DateTime? get_last_updated()
    +void set_last_updated(DateTime)
    --
    +void add_category(Tag);
    +bool should_update();
    +void update();
}

class Tag {
    +Tag(string name, string? link = null, string? label = null)
    --
    +string name
    +string? link
    +string? label

    +string get_name()
    +void set_name(string)
    +string? get_link()
    +void set_link(string)
    +string? get_label()
    +void set_label(string)
}

class Icon {
    Icon(string new_url, string new_title = null, string new_link = null1)
    --
    +string url
    +string? title
    +string? link
    +Pixbuf? image
    +string? description

    +string get_url()
    +void set_url(string)
    +string? get_title()
    +void set_title(string)
    +string? get_link()
    +void set_link(string)
    +Pixbuf? get_image()
    +string? get_description()
    +void set_description(string)
    --
    +async bool load()
}
note left: Icon title and link aren't guaranteed to be non-null because Atom only defines icons by their url

class Person {
    +Person(string? name, string? url = null, string? email = null)
    --
    +string? name
    +string? url
    +string? email
    +bool is_valid
}

class Item {
    Item()
    --
    +string title
    +string? link
    +string? content
    +string guid
    +Person? author
    +Collection<Tag> tags
    +Collection<Attachment> attachments
    +Collection<Person> contributors
    +string? rights
    +DateTime published
    +DateTime updated
}
note left: Name isn't guaranteed to be non-null because of RSS2.0 email-only fields
@enduml
